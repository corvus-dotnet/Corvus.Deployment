on:
  workflow_call:
    outputs:
      semver:
        description: The SemVer generated by GitVersion
        value: ${{ jobs.run_gitversion.outputs.semver }}
      major:
        description: The 'Major' version component generated by GitVersion
        value: ${{ jobs.run_gitversion.outputs.major }}
      majorMinor:
        description: The 'Major.Minor' version components generated by GitVersion
        value: ${{ jobs.run_gitversion.outputs.major }}.${{ jobs.run_gitversion.outputs.minor }}
      majorMinorPatch:
        description: The 'Major.Minor.Patch' version components generated by GitVersion
        value: ${{ jobs.run_gitversion.outputs.major }}.${{ jobs.run_gitversion.outputs.minor }}
      preReleaseTag:
        description: The SemVer pre-release tag component generated by GitVersion
        value: ${{ jobs.run_gitversion.outputs.preReleaseTag }}
      nuGetPreReleaseTag:
        description: The NuGet-friendly SemVer pre-release tag component generated by GitVersion
        value: ${{ jobs.run_gitversion.outputs.nuGetPreReleaseTag }}


jobs:
  run_gitversion:
    runs-on: ubuntu-latest
    name: Run GitVersion
    outputs:
      semver: ${{ steps.run_gitversion.outputs.semver }}
      major: ${{ steps.run_gitversion.outputs.major }}
      majorMinor: ${{ steps.run_gitversion.outputs.major }}.${{ steps.run_gitversion.outputs.minor }}
      majorMinorPatch: ${{ steps.run_gitversion.outputs.major }}.${{ steps.run_gitversion.outputs.minor }}.${{ steps.run_gitversion.outputs.patch }}
      preReleaseTag: ${{ steps.run_gitversion.outputs.preReleaseTag }}
      nuGetPreReleaseTag: ${{ steps.run_gitversion.outputs.nuGetPreReleaseTag }}
    steps:
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Install GitVersion
      run: |
        dotnet tool install -g GitVersion.Tool --version 5.8.0
        echo "/github/home/.dotnet/tools" >> $GITHUB_PATH

    - name: Run GitVersion
      id: run_gitversion
      run: |
        pwsh -noprofile -c 'dotnet-gitversion /diag'
        pwsh -noprofile -c '(dotnet-gitversion | ConvertFrom-Json).psobject.properties | % { echo "$($_.name)=$($_.value)" >> $env:GITHUB_ENV }'

    - run: |
        echo "SemVer: ${{ steps.run_gitversion.outputs.SemVer }}"