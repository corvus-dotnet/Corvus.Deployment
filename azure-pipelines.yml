# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: CI

resources:
  repositories:
    - repository: recommended_practices
      type: github
      name: endjin/Endjin.RecommendedPractices.AzureDevopsPipelines.GitHub
      endpoint: marain-github

trigger:
  branches:
    include:
    - master
    - feature/*
  tags:
    include:
    - '*'

stages:
- stage: Run_Tests
  displayName: Run tests stage
  jobs:
  - job: run_pester_tests
    displayName: Run Pester tests
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/run-tests.ps1

- stage: Tag_Build
  displayName: Tag successful build
  jobs:
  - job:
    condition: and(succeeded(), or(variables['Endjin.ForcePublish'], eq(variables['GitVersion.PreReleaseTag'], '')))
    displayName: Tag sources
    pool:
      vmImage: 'windows-latest'
    steps:
    - template: templates/install.dotnet-global-tools.workaround.yml@recommended_practices
    - template: templates/install-and-run-gitversion.yml@recommended_practices
    - powershell: |
        Write-Host "##vso[task.setvariable variable=Endjin_IsPreRelease]$((-not ([string]::IsNullOrEmpty($Env:GITVERSION_PRERELEASETAG))))"
        Write-Host "##vso[task.setvariable variable=Endjin_Repository_Name]$Env:BUILD_REPOSITORY_NAME"
      displayName: 'Set Custom Environment Variables'
    - task: GitHubTag@1
      displayName: 'Tag Git'
      inputs:
        githubEndpoint: 'marain-github'
        repositoryName: $(Endjin_Repository_Name)
        commmit: 'Release v$(GitVersion.SemVer)'
        tag: '$(GitVersion.SemVer)'
  